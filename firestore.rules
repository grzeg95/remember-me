rules_version = '2';

service cloud.firestore {

	match /databases/{database}/documents/users/{userId} {

    function isOwner() {
      return userId == request.auth.uid
    }

    function _getUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function _isDisabled(user) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && (user == null ? false : 'disabled' in user.data ? user.data.disabled : false)
    }

    function isDisabled() {
      return _isDisabled(_getUser())
    }

    function allowSetProgress(taskId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid));
      let timesOfDay = user.data.timesOfDay;
      let timeOfDay = resource.data.timesOfDay.keys()[0];

      return isOwner()
        && !_isDisabled(user)
        && exists(/databases/$(database)/documents/users/$(userId)/task/$(taskId))
        && (timesOfDay != null && timeOfDay in timesOfDay)
        && request.resource.data.diff(resource.data).affectedKeys() == ['timesOfDay'].toSet()
        && request.resource.data.timesOfDay.diff(resource.data.timesOfDay).affectedKeys().size() == 1
        && request.resource.data.timesOfDay.diff(resource.data.timesOfDay).changedKeys().size() == 1
        && request.resource.data.timesOfDay.values().toSet().hasOnly([true, false])

    }

    allow get: if isOwner() && !isDisabled()

    match /today/{day}/task/{taskId} {
      allow list: if isOwner() && !isDisabled() && day in ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']
        && request.query.orderBy.description == 'ASC'
      	&& request.query.limit == 50 * 20

      // set progress
      allow update: if allowSetProgress(taskId)
    }

    match /task/{taskId} {
    	allow get: if isOwner() && !isDisabled()
      allow list: if
      	isOwner() && !isDisabled()
      	&& request.query.orderBy.description == 'ASC'
      	&& request.query.limit == 50
    }

  }

}
